// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  username   String
  password   String
  email      String      @unique
  role       Role        @default(USER)
  Favorite   Favorite[]
  AnimeLists AnimeList[] @relation("UserAnimeList")
  MangaLists MangaList[] @relation("UserMangaList")
}
enum Role {
  ADMIN
  USER
}

model Favorite {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int

  anime     Anime?  @relation(fields: [animeId], references: [id])
  animeId   Int?

  manga     Manga?  @relation(fields: [mangaId], references: [id])
  mangaId   Int?

  @@unique([userId, animeId])
  @@unique([userId, mangaId])
}

model AnimeList {
  id      Int    @id @default(autoincrement())
  user    User   @relation("UserAnimeList", fields: [userId], references: [id])
  userId  Int
  anime   Anime? @relation("AnimeList_Anime", fields: [animeId], references: [id])
  animeId Int?
}

model MangaList {
  id      Int    @id @default(autoincrement())
  user    User   @relation("UserMangaList", fields: [userId], references: [id])
  userId  Int
  manga   Manga? @relation("MangaList_Manga", fields: [mangaId], references: [id])
  mangaId Int?
}

model Anime {
  id         Int         @id @default(autoincrement())
  malId      Int         @unique
  title      String
  imageUrl   String
  trailer    String?
  score      Float?
  status     String?
  type       String?
  synopsis   String      @db.Text
  Favorite   Favorite[]
  AnimeLists AnimeList[] @relation("AnimeList_Anime")

  @@fulltext([title])
}

model Manga {
  id         Int         @id @default(autoincrement())
  malId      Int         @unique
  title      String
  imageUrl   String
  volumes    Int?
  score      Float?
  status     String?
  type       String?
  synopsis   String      @db.Text
  Favorite   Favorite[]
  MangaLists MangaList[] @relation("MangaList_Manga")

  @@fulltext([title])
}

model News {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  createAt DateTime
  updateAt DateTime
}
