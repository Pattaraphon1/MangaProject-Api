// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  username String
  password String
  email    String @unique
  role     Role   @default(USER)
  // favorites Favorite[]
  // finishes  Finish[]
}

enum Role {
  ADMIN
  PUBLIC
  USER
}

// model Favorite {
//   id      Int    @id @default(autoincrement())
//   user    User   @relation(fields: [userId], references: [id])
//   userId  Int
//   anime   Anime? @relation(fields: [animeId], references: [id])
//   animeId Int?
//   manga   Manga? @relation(fields: [mangaId], references: [id])
//   mangaId Int?
// }

// model Finish {
//   id      Int    @id @default(autoincrement())
//   user    User   @relation(fields: [userId], references: [id])
//   userId  Int
//   anime   Anime? @relation(fields: [animeId], references: [id])
//   animeId Int?
//   manga   Manga? @relation(fields: [mangaId], references: [id])
//   mangaId Int?
// }

model Anime {
  id       Int     @id @default(autoincrement())
  malId    Int     @unique
  title    String
  imageUrl String
  trailer  String?
  score    Float?
  status   String?
  type     String?
  synopsis String  @db.Text
  @@fulltext([title])
  // Favorite Favorite[]
  // Finish   Finish[]
  // Genre    Genre?     @relation(fields: [genreId], references: [id])
  // genreId  Int?
}

model Manga {
  id       Int     @id @default(autoincrement())
  malId    Int     @unique
  title    String
  imageUrl String
  volumes  Int?
  score    Float?
  status   String?
  type     String?
  synopsis String  @db.Text
  @@fulltext([title])
  //   genreRel Genre? @relation(fields: [genreId], references: [id])
  //   genreId  Int?

  //   favorites Favorite[]
  //   finishes  Finish[]
}

// model Genre {
//   id   Int    @id @default(autoincrement())
//   name String

//   animes Anime[]
//   mangas Manga[]
// }

model News {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  createAt DateTime
  updateAt DateTime
}
